# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Pages with errors >> Visual effect for single product view
- Location: /home/runner/work/sauce-demo-let-s-test-it/sauce-demo-let-s-test-it/src/tests/ui/ui.spec.ts:65:7

# Error details

```
Error: expect(page).toHaveScreenshot(expected)

  could not decode image as PNG.

Expected: /home/runner/work/sauce-demo-let-s-test-it/sauce-demo-let-s-test-it/src/assets/images/ui/product.png

Call log:
  - expect.toHaveScreenshot(product.png) with timeout 5000ms
    - verifying given screenshot expectation
  - taking page screenshot
    - disabled all CSS animations
  - waiting for fonts to load...
  - fonts loaded
  - could not decode image as PNG.

    at BasePage.expectHaveScreenshot (/home/runner/work/sauce-demo-let-s-test-it/sauce-demo-let-s-test-it/src/pages/e2e/base.page.ts:75:29)
    at /home/runner/work/sauce-demo-let-s-test-it/sauce-demo-let-s-test-it/src/tests/ui/ui.spec.ts:76:16
```

# Test source

```ts
   1 | import { HeaderComponent } from '@_src/components/header.component';
   2 | import { SideBarComponent } from '@_src/components/sidebar.component';
   3 | import { ScreenshotPath } from '@_src/utils/paths.util';
   4 | import { type Locator, type Page, expect } from '@playwright/test';
   5 |
   6 | export class BasePage {
   7 |   protected readonly page: Page;
   8 |   private readonly rootLocator: Locator;
   9 |   readonly header: HeaderComponent;
  10 |   readonly sidebar: SideBarComponent;
  11 |
  12 |   readonly headerTitle: Locator;
  13 |   readonly error: Locator;
  14 |
  15 |   constructor(page: Page) {
  16 |     this.page = page;
  17 |     this.rootLocator = page.locator('#root');
  18 |     this.header = new HeaderComponent(this.page);
  19 |     this.sidebar = new SideBarComponent(this.page);
  20 |
  21 |     this.headerTitle = page.getByTestId('title');
  22 |     this.error = page.getByTestId('error');
  23 |   }
  24 |
  25 |   async goTo(url: string = '/'): Promise<void> {
  26 |     await this.page.goto(url);
  27 |   }
  28 |
  29 |   async toHaveUrl(url: string | RegExp): Promise<void> {
  30 |     await expect(this.page).toHaveURL(url);
  31 |   }
  32 |
  33 |   async catchError(error: string): Promise<void> {
  34 |     await expect(this.error).toContainText(error);
  35 |   }
  36 |
  37 |   //* Sidebar
  38 |   async resetApp(): Promise<void> {
  39 |     await this.header.clickSideBarMenu();
  40 |     await this.sidebar.clickLinkResetAppState();
  41 |     await this.sidebar.clickButtonCrossMenu();
  42 |   }
  43 |
  44 |   async logoutFromApp(): Promise<void> {
  45 |     await this.header.clickSideBarMenu();
  46 |     await this.sidebar.clickLinkLogout();
  47 |   }
  48 |
  49 |   async closePage(): Promise<void> {
  50 |     await this.page.close();
  51 |   }
  52 |
  53 |   //* Scrolls
  54 |   async scrollDown(): Promise<void> {
  55 |     await this.page.evaluate(() => {
  56 |       window.scrollTo(0, document.body.scrollHeight);
  57 |     });
  58 |   }
  59 |
  60 |   async scrollUp(): Promise<void> {
  61 |     await this.page.evaluate(() => {
  62 |       window.scrollTo(0, 0);
  63 |     });
  64 |   }
  65 |
  66 |   //* Screenshot
  67 |   async takeScreenshot(screenshot: string): Promise<void> {
  68 |     await this.page.screenshot({
  69 |       path: `${ScreenshotPath}${screenshot}.png`,
  70 |       fullPage: true,
  71 |     });
  72 |   }
  73 |
  74 |   async expectHaveScreenshot(screenshot: string): Promise<void> {
> 75 |     await expect(this.page).toHaveScreenshot(`${screenshot}.png`, { fullPage: true });
     |                             ^ Error: expect(page).toHaveScreenshot(expected)
  76 |   }
  77 |
  78 |   //* ARIA
  79 |   async toMatchAriaSnapshot(aria: string): Promise<void> {
  80 |     await expect(this.rootLocator).toMatchAriaSnapshot({ name: `${aria}.aria.yml` });
  81 |   }
  82 | }
  83 |
```

# Local changes

```diff
diff --git a/src/assets/images/ui/cart.png b/src/assets/images/ui/cart.png
index 3f8555a..dfaed10 100644
--- a/src/assets/images/ui/cart.png
+++ b/src/assets/images/ui/cart.png
@@ -1,3 +1,3 @@
 version https://git-lfs.github.com/spec/v1
-oid sha256:26d9bb5edd3d4ecabef70c1d80911c464a030a263d215fae9e430e794cd21bcd
-size 26035
+oid sha256:4471632d48af413a5f9892749eabb927af98d46816b1b2846e37bff05ff3b3bd
+size 25677
diff --git a/src/assets/images/ui/checkout.png b/src/assets/images/ui/checkout.png
index a296966..23797d4 100644
--- a/src/assets/images/ui/checkout.png
+++ b/src/assets/images/ui/checkout.png
@@ -1,3 +1,3 @@
 version https://git-lfs.github.com/spec/v1
-oid sha256:5ee9246ca9bbf01cd1457437a9199c8c244a66b2f364a62cd68a08731e8edf55
-size 29206
+oid sha256:8bb30ff111d23ec304b49021b91c6be2d3ced2b3a220556eb686a4077e54d3c7
+size 28626
diff --git a/src/assets/images/ui/inventory.png b/src/assets/images/ui/inventory.png
index 5f5258d..22ef39a 100644
--- a/src/assets/images/ui/inventory.png
+++ b/src/assets/images/ui/inventory.png
@@ -1,3 +1,3 @@
 version https://git-lfs.github.com/spec/v1
-oid sha256:205d47c1f19afa86f7fbd800052455edc213af008c65d98986cd395fcdff7941
-size 315352
+oid sha256:23abad31c428bb7b499673d2f7581e6acd2b4e606aa0c92e16bb20c5a3e7555e
+size 292181
diff --git a/src/assets/images/ui/product.png b/src/assets/images/ui/product.png
index c383411..44bfa08 100644
--- a/src/assets/images/ui/product.png
+++ b/src/assets/images/ui/product.png
@@ -1,3 +1,3 @@
 version https://git-lfs.github.com/spec/v1
-oid sha256:18f00368ba1299eee034b690f070817036ed4e00c750f3d1de1df1672eb790df
-size 346283
+oid sha256:0628433f9e996c764a3c02180ada9f9072db70e92895a1d440a9f748e288ffb3
+size 276177
```